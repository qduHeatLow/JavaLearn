{"remainingRequest":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\src\\views\\dish\\addDishtype.vue?vue&type=template&id=d1f3ea8c&scoped=true&","dependencies":[{"path":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\src\\views\\dish\\addDishtype.vue","mtime":1706604659566},{"path":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\cangqiongwaimai\\苍穹外卖前端课程\\代码\\day02\\project-sky-admin-vue-ts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { key: _vm.vueRest, staticClass: \"addBrand-container\" }, [\n    _c(\n      \"div\",\n      { key: _vm.restKey, staticClass: \"container\" },\n      [\n        _c(\n          \"el-form\",\n          {\n            ref: \"ruleForm\",\n            staticClass: \"demo-ruleForm\",\n            attrs: {\n              model: _vm.ruleForm,\n              rules: _vm.rules,\n              inline: true,\n              \"label-width\": \"180px\"\n            }\n          },\n          [\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"菜品名称:\", prop: \"name\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请填写菜品名称\", maxlength: \"20\" },\n                      model: {\n                        value: _vm.ruleForm.name,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm, \"name\", $$v)\n                        },\n                        expression: \"ruleForm.name\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"菜品分类:\", prop: \"categoryId\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        attrs: { placeholder: \"请选择菜品分类\" },\n                        model: {\n                          value: _vm.ruleForm.categoryId,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm, \"categoryId\", $$v)\n                          },\n                          expression: \"ruleForm.categoryId\"\n                        }\n                      },\n                      _vm._l(_vm.dishList, function(item, index) {\n                        return _c(\"el-option\", {\n                          key: index,\n                          attrs: { label: item.name, value: item.id }\n                        })\n                      }),\n                      1\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"菜品价格:\", prop: \"price\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"请设置菜品价格\" },\n                      model: {\n                        value: _vm.ruleForm.price,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm, \"price\", $$v)\n                        },\n                        expression: \"ruleForm.price\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"口味做法配置:\" } },\n              [\n                _c(\"el-form-item\", [\n                  _c(\"div\", { staticClass: \"flavorBox\" }, [\n                    _vm.dishFlavors.length == 0\n                      ? _c(\n                          \"span\",\n                          {\n                            staticClass: \"addBut\",\n                            on: { click: _vm.addFlavore }\n                          },\n                          [_vm._v(\"\\n              + 添加口味\")]\n                        )\n                      : _vm._e(),\n                    _vm.dishFlavors.length != 0\n                      ? _c(\"div\", { staticClass: \"flavor\" }, [\n                          _c(\"div\", { staticClass: \"title\" }, [\n                            _c(\"span\", [_vm._v(\"口味名（3个字内）\")])\n                          ]),\n                          _c(\n                            \"div\",\n                            { staticClass: \"cont\" },\n                            _vm._l(_vm.dishFlavors, function(item, index) {\n                              return _c(\n                                \"div\",\n                                { key: index, staticClass: \"items\" },\n                                [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"itTit\" },\n                                    [\n                                      _c(\"SelectInput\", {\n                                        attrs: {\n                                          \"dish-flavors-data\":\n                                            _vm.leftDishFlavors,\n                                          index: index,\n                                          value: item.name\n                                        },\n                                        on: { select: _vm.selectHandle }\n                                      })\n                                    ],\n                                    1\n                                  ),\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"labItems\",\n                                      staticStyle: { display: \"flex\" }\n                                    },\n                                    [\n                                      _vm._l(item.value, function(it, ind) {\n                                        return _c(\"span\", { key: ind }, [\n                                          _vm._v(\n                                            _vm._s(it) +\n                                              \"\\n                      \"\n                                          ),\n                                          _c(\n                                            \"i\",\n                                            {\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.delFlavorLabel(\n                                                    index,\n                                                    ind\n                                                  )\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(\"X\")]\n                                          )\n                                        ])\n                                      }),\n                                      _c(\"div\", {\n                                        staticClass: \"inputBox\",\n                                        style: _vm.inputStyle\n                                      })\n                                    ],\n                                    2\n                                  ),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      staticClass: \"delFlavor delBut non\",\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.delFlavor(item.name)\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"删除\")]\n                                  )\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          !!this.leftDishFlavors.length &&\n                          this.dishFlavors.length < this.dishFlavorsData.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"addBut\",\n                                  on: { click: _vm.addFlavore }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                添加口味\\n              \"\n                                  )\n                                ]\n                              )\n                            : _vm._e()\n                        ])\n                      : _vm._e()\n                  ])\n                ])\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"菜品图片:\", prop: \"image\" } },\n                  [\n                    _c(\n                      \"image-upload\",\n                      {\n                        attrs: { \"prop-image-url\": _vm.imageUrl },\n                        on: { imageChange: _vm.imageChange }\n                      },\n                      [\n                        _vm._v(\"\\n            图片大小不超过2M\"),\n                        _c(\"br\"),\n                        _vm._v(\"仅能上传 PNG JPEG JPG类型图片\"),\n                        _c(\"br\"),\n                        _vm._v(\"建议上传200*200或300*300尺寸的图片\\n          \")\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"address\" },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"菜品描述:\", prop: \"region\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: {\n                        type: \"textarea\",\n                        rows: 3,\n                        maxlength: \"200\",\n                        placeholder: \"菜品描述，最长200字\"\n                      },\n                      model: {\n                        value: _vm.ruleForm.description,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm, \"description\", $$v)\n                        },\n                        expression: \"ruleForm.description\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"subBox address\" },\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    on: {\n                      click: function() {\n                        return _vm.$router.back()\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n          取消\\n        \")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    class: { continue: _vm.actionType === \"add\" },\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.submitForm(\"ruleForm\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n          保存\\n        \")]\n                ),\n                _vm.actionType == \"add\"\n                  ? _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"primary\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.submitForm(\"ruleForm\", \"goAnd\")\n                          }\n                        }\n                      },\n                      [_vm._v(\"\\n          保存并继续添加\\n        \")]\n                    )\n                  : _vm._e()\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}